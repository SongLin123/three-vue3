{"version":3,"file":"index.vue2.mjs","sources":["../../../src/scene-viewer/index.vue"],"sourcesContent":["<template >\r\n    <div class=\"render\">\r\n\r\n\r\n    </div>\r\n</template>\r\n<script setup lang=\"ts\">\nimport { mergeDefaults as __MACROS_mergeDefaults } from \"vue\";\r\nimport * as THREE from \"three\";\r\nimport { createScene, createFloor, createGui } from \"../hooks\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { defineComponent, getCurrentInstance, h, onMounted, onUnmounted, ref, watch, defineEmits } from \"vue\";\r\nimport { MTLLoader } from \"three/examples/jsm/loaders/MTLLoader.js\";\r\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\";\r\n\r\n\r\ndefineProps(__MACROS_mergeDefaults({\r\n    scenejson: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    mtlUrl: {\r\n        type: String,\r\n        default: ''\r\n    }\r\n}, {  }))\r\n\r\nconst { scene, camera, renderer, controls, setAutoCameraLookAt, setSize } = createScene(handleModelClick);\r\n\r\nconst { grid } = createFloor(scene)\r\n\r\n\r\nfunction handleModelClick(select: THREE.Object3D<THREE.Event> | false, e: MouseEvent) {\r\n    if (select) {\r\n\r\n\r\n        setAutoCameraLookAt(select, controls)\r\n\r\n    }\r\n    // 右键点击\r\n    else if (e.button === 2) {\r\n        setAutoCameraLookAt(model, controls)\r\n\r\n    }\r\n}\r\n// 加载半球光\r\nconst hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1.5);\r\nhemiLight.position.set(0, 200, 0);\r\nscene.add(hemiLight);\r\n\r\nconst dirLight = new THREE.DirectionalLight(0xffffff, 1.5);\r\ndirLight.position.set(0, 200, 100);\r\ndirLight.castShadow = true;\r\ndirLight.shadow.camera.top = 180;\r\ndirLight.shadow.camera.bottom = - 100;\r\ndirLight.shadow.camera.left = - 120;\r\ndirLight.shadow.camera.right = 120;\r\nscene.add(dirLight);\r\n\r\n\r\n\r\nlet model: THREE.Group\r\nconst isLoading = ref(false)\r\nconst emit = defineEmits(['loadStatus'])\r\nwatch(isLoading, (newVal) => {\r\n    emit('loadStatus', isLoading.value)\r\n})\r\nfunction loadSceneFromJson(scenejson, mtlUrl) {\r\n\r\n    if (model) {\r\n        scene.remove(model)\r\n    }\r\n    if (!scenejson) {\r\n        return\r\n    }\r\n\r\n    isLoading.value = true\r\n    const urlRoot = 'scene/';\r\n    model = new THREE.Group();\r\n\r\n    const loadObjItem = async (revitElement, material?) => {\r\n\r\n\r\n\r\n        let objFileName = revitElement.elementId + '.obj';\r\n\r\n        let objLoader = new OBJLoader();\r\n        objLoader.path = urlRoot;\r\n\r\n        material && objLoader.setMaterials(material);\r\n\r\n        const obj = await objLoader.loadAsync(objFileName)\r\n\r\n\r\n        obj.traverse((mesh: THREE.Object3D | THREE.Mesh) => {\r\n\r\n            if (mesh instanceof THREE.Mesh) {\r\n\r\n                mesh.geometry.scale(0.01, 0.01, 0.01);\r\n                mesh.geometry.rotateX(-Math.PI / 2);\r\n                // mesh.material = shadermat3;\r\n\r\n                // mesh.material = shadermat4\r\n                // mesh.geometry.computeVertexNormals();\r\n\r\n            }\r\n\r\n        })\r\n\r\n        model.add(obj);\r\n\r\n    }\r\n\r\n    fetch(new Request(scenejson)).then(function (response) {\r\n        return response.json();\r\n    }).then(async (body) => {\r\n        let mtl\r\n        if (mtlUrl) {\r\n            const mtlLoader = new MTLLoader();\r\n            mtl = await mtlLoader.loadAsync(mtlUrl);\r\n        }\r\n\r\n        for (let i = 0; i < body.length; i++) {\r\n            let objElem1 = body[i];\r\n\r\n\r\n            await loadObjItem(objElem1, mtl);\r\n\r\n        }\r\n        isLoading.value = false\r\n        scene.add(model);\r\n        setAutoCameraLookAt(model)\r\n    })\r\n\r\n}\r\nloadSceneFromJson(__props.scenejson, __props.mtlUrl)\r\n\r\ndefineExpose({\r\n    scene,\r\n    camera,\r\n    renderer,\r\n    controls,\r\n    loadSceneFromJson,\r\n    isLoading,\r\n    setSize\r\n})\r\n\r\n\r\n</script>\r\n<style ></style>"],"names":["THREE.HemisphereLight","THREE.DirectionalLight","THREE.Group","THREE.Mesh"],"mappings":"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"}