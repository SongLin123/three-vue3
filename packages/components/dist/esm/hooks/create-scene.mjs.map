{"version":3,"file":"create-scene.mjs","sources":["../../../src/hooks/create-scene.ts"],"sourcesContent":["import { Ref, ref, onMounted, onUnmounted } from \"vue\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\r\nimport { eventInObject } from \"../utils\";\r\nimport { throttle } from \"lodash-es\";\r\nimport { useParentElement } from \"@vueuse/core\";\r\n// 导入动画库\r\nimport gsap from \"gsap\";\r\nimport { useEdge } from \"./use-edge\";\r\nimport { useSharder } from \"./use-sharder\";\r\n\r\nexport function createScene(\r\n  handleModelClick?: (obj: THREE.Object3D | false, e: MouseEvent) => void\r\n) {\r\n  const width = 300;\r\n  const height = 300;\r\n\r\n  // 初始化场景\r\n  const scene = new THREE.Scene();\r\n  // 坐标轴\r\n  const axesHelper = new THREE.AxesHelper(100);\r\n  scene.add(axesHelper);\r\n  // 初始化相机\r\n  const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000000);\r\n  camera.position.set(0, 0, 0);\r\n  // 初始化渲染器\r\n  const renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n  });\r\n\r\n  // 初始化控制器\r\n  const controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.enableDamping = true;\r\n\r\n  // 背景\r\n  var planeSize = 144500;\r\n  var totalObjects = 50000;\r\n  var geometry = new THREE.BufferGeometry();\r\n\r\n  geometry.setAttribute(\r\n    \"position\",\r\n    new THREE.BufferAttribute(new Float32Array(totalObjects * 3), 3)\r\n  );\r\n  geometry.setAttribute(\r\n    \"color\",\r\n    new THREE.Float32BufferAttribute(new Float32Array(totalObjects * 3), 3)\r\n  );\r\n  var posArr = geometry.attributes.position.array;\r\n  var colorArr = geometry.attributes.color.array;\r\n\r\n  for (let i = 0; i < totalObjects; i++) {\r\n    posArr[i * 3] = Math.random() * planeSize - planeSize * 0.5;\r\n    posArr[i * 3 + 1] = Math.random() * planeSize + 100;\r\n    posArr[i * 3 + 2] = Math.random() * planeSize - planeSize * 0.5;\r\n\r\n    let cl1 = new THREE.Color(Math.random() * 0xffffff);\r\n\r\n    colorArr[i * 3] = cl1.r;\r\n    colorArr[i * 3 + 1] = cl1.g;\r\n    colorArr[i * 3 + 2] = cl1.b;\r\n  }\r\n\r\n  var geometry2 = geometry.clone();\r\n\r\n  var material = new THREE.PointsMaterial({\r\n    size: 50,\r\n    vertexColors: true,\r\n  });\r\n  var particles = new THREE.Points(geometry, material);\r\n\r\n  var material2 = new THREE.PointsMaterial({\r\n    size: 50,\r\n    vertexColors: true,\r\n  });\r\n  var particles2 = new THREE.Points(geometry2, material2);\r\n  // particles2.layers.enable(1)\r\n  particles2.rotation.z = -Math.PI;\r\n  scene.add(particles);\r\n  scene.add(particles2);\r\n  // 添加环境光\r\n  // const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n  // scene.add(ambientLight);\r\n\r\n  // 对焦相机\r\n  function setAutoCameraLookAt(\r\n    model: THREE.Object3D,\r\n    controls?: OrbitControls\r\n  ) {\r\n    const box = new THREE.Box3().setFromObject(model);\r\n    const boxShap = box.getSize(new THREE.Vector3());\r\n    const boxSize = box.getSize(new THREE.Vector3()).length();\r\n    const boxCenter = box.getCenter(new THREE.Vector3());\r\n\r\n    // const pointlight = new THREE.PointLight('red', 1, 100);\r\n    // pointlight.position.set(boxCenter.x, boxCenter.y, boxCenter.z);\r\n    // const pointlightHelper = new THREE.PointLightHelper(pointlight, 5);\r\n    // scene.add(pointlightHelper);\r\n    // scene.add(pointlight);\r\n\r\n    const halfSizeToFitOnScreen = boxSize * 1.7 * 0.5;\r\n    const halfFovY = THREE.MathUtils.degToRad(camera.fov * 0.5);\r\n    const distance = halfSizeToFitOnScreen / Math.tan(halfFovY);\r\n\r\n    // 修改代码使摄像头不管在哪个方向，都能对准盒子侧面中心。\r\n    // 从象限正中心到盒子中心的向量\r\n    const direction = new THREE.Vector3()\r\n      .subVectors(new THREE.Vector3(100, 100, 100), boxCenter)\r\n      .normalize();\r\n\r\n    // move the camera to a position distance units way from the center\r\n    // in whatever direction the camera was from the center already\r\n    const v3 = direction.multiplyScalar(distance).add(boxCenter);\r\n    gsap.to(camera.position, {\r\n      duration: 1,\r\n      x: v3.x,\r\n      y: v3.y,\r\n      z: v3.z,\r\n      onUpdate: () => {\r\n        // pick some near and far values for the frustum that\r\n        // will contain the box.\r\n\r\n        // point the camera to look at the center of the box\r\n        camera.near = boxSize / 100;\r\n        camera.far = boxSize * 100;\r\n        camera.lookAt(boxCenter.x, boxCenter.y, boxCenter.z);\r\n        controls && (controls.target = boxCenter);\r\n        camera.updateProjectionMatrix();\r\n      },\r\n    });\r\n  }\r\n\r\n  function resizeRendererToDisplaySize(renderer: THREE.WebGLRenderer) {\r\n    const canvas = renderer.domElement;\r\n    const width = canvas.clientWidth;\r\n    const height = canvas.clientHeight;\r\n    const needResize = canvas.width !== width || canvas.height !== height;\r\n    if (needResize) {\r\n      renderer.setSize(width, height, false);\r\n    }\r\n    return needResize;\r\n  }\r\n  let inHoldon = false;\r\n\r\n  function render() {\r\n    if (resizeRendererToDisplaySize(renderer)) {\r\n      const canvas = renderer.domElement;\r\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\r\n      camera.updateProjectionMatrix();\r\n    }\r\n\r\n    renderer.render(scene, camera);\r\n\r\n    requestAnimationFrame(render);\r\n  }\r\n\r\n  // 模型被点击\r\n  const handleClick = (root) => {\r\n    return (e: MouseEvent) => {\r\n      eventInObject(\r\n        e,\r\n        (obj) => {\r\n          if (scene.userData.removeEdge) {\r\n            scene.userData.removeEdge();\r\n            scene.userData.removeEdge = null;\r\n          }\r\n          if (typeof obj !== \"boolean\") {\r\n            scene.userData.removeEdge = useEdge(\r\n              obj.object as THREE.Mesh,\r\n              scene\r\n            );\r\n          }\r\n          handleModelClick &&\r\n            handleModelClick(typeof obj !== \"boolean\" && obj.object, e);\r\n        },\r\n        { rootDom: root, scene, camera }\r\n      );\r\n    };\r\n  };\r\n  let removeClickFn: ((e: MouseEvent) => void) | null = null;\r\n  // 模型被鼠标移入\r\n  const handleHover = (root) => {\r\n    let tempMesh: any = null;\r\n    // let removeEdge;\r\n    let removeSharder;\r\n\r\n    return (e: MouseEvent) => {\r\n      eventInObject(\r\n        e,\r\n        throttle(\r\n          (obj: false | THREE.Intersection<THREE.Object3D<THREE.Event>>) => {\r\n            if (tempMesh) {\r\n              if (tempMesh === (obj || {}).object) {\r\n                return;\r\n              } else {\r\n                tempMesh = null;\r\n                removeSharder();\r\n              }\r\n            }\r\n            if (!obj) {\r\n              return;\r\n            }\r\n            console.log(\"handleHover\", obj);\r\n            tempMesh = obj.object;\r\n\r\n            // removeEdge = useEdge(tempMesh, scene);\r\n            removeSharder = useSharder(tempMesh, scene);\r\n          },\r\n          500\r\n        ),\r\n        { rootDom: root, scene, camera }\r\n      );\r\n    };\r\n  };\r\n  let removeHoverFn: ((e: MouseEvent) => void) | null = null;\r\n\r\n  const setSize = (el) => {\r\n    const width = el.clientWidth;\r\n    const height = el.clientHeight;\r\n    renderer.setSize(width, height);\r\n  };\r\n  const e = useParentElement();\r\n  onMounted(() => {\r\n    // const app = getCurrentInstance();\r\n    // el = app?.ctx.$el!;\r\n    let el = e.value?.querySelector(\".render\")!;\r\n    console.log(\"el\", el);\r\n    el.appendChild(renderer.domElement);\r\n    setSize(el);\r\n\r\n    // 长按\r\n    el.addEventListener(\"mousedown\", (e) => {\r\n      console.log(\"mousedown\", e.button);\r\n      if (e.button === 0) {\r\n        setTimeout(() => {\r\n          inHoldon = true;\r\n        }, 500);\r\n      }\r\n    });\r\n    el.addEventListener(\"mouseup\", (e) => {\r\n      console.log(\"mousedown\", e.button);\r\n      if (e.button === 0 && inHoldon) {\r\n        // 此时为长按,阻止点击触发\r\n        inHoldon = false;\r\n        e.stopPropagation();\r\n        return;\r\n      }\r\n      // 右键点击\r\n      if (e.button === 2) {\r\n        if (scene.userData.removeEdge) {\r\n          scene.userData.removeEdge();\r\n          scene.userData.removeEdge = null;\r\n        }\r\n        handleModelClick && handleModelClick(false, e);\r\n      }\r\n    });\r\n\r\n    removeClickFn = handleClick(el);\r\n    el.addEventListener(\"click\", removeClickFn);\r\n\r\n    // 鼠标移入\r\n    removeHoverFn = handleHover(el);\r\n    el.addEventListener(\"mousemove\", removeHoverFn);\r\n\r\n    requestAnimationFrame(render);\r\n  });\r\n  onUnmounted(() => {\r\n    // 点击\r\n    el.removeEventListener(\"click\", removeClickFn);\r\n    removeClickFn = null;\r\n\r\n    // 鼠标移入\r\n    el.removeEventListener(\"click\", removeHoverFn);\r\n    removeHoverFn = null;\r\n  });\r\n  return {\r\n    scene,\r\n    camera,\r\n    renderer,\r\n    controls,\r\n    setAutoCameraLookAt,\r\n    setSize: () => setSize(el),\r\n  };\r\n}\r\n"],"names":["THREE.Scene","THREE.AxesHelper","THREE.PerspectiveCamera","THREE.WebGLRenderer","THREE.BufferGeometry","THREE.BufferAttribute","THREE.Float32BufferAttribute","THREE.Color","THREE.PointsMaterial","THREE.Points","controls","THREE.Box3","THREE.Vector3","THREE.MathUtils","gsap","renderer","width","height","e","el"],"mappings":"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"}